#!/usr/bin/env node

/**
 * @license
 * Copyright (c) 2018 James Jensen.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

const fs = require("fs-extra");
const path = require("path");
const execa = require("execa");
const { zinfoOptions, zinfoOptionsDesc } = require("..");

const usageTemplate = async () => `<!-- BEGIN:usage -->

\`\`\`sh
$ zinfo --help
${await execa.stdout(path.join(__dirname, "../bin/zinfo"), ["--help"])}
\`\`\`

<!-- END:usage -->`;

const optionsTemplate = () => `<!-- BEGIN:options -->

${zinfoOptions
  .map(
    (o, i) => `### \`${o}\`

${zinfoOptionsDesc[i]}
`
  )
  .join("\n")}
<!-- END:options -->`;

(async function() {
  const readMePath = path.join(__dirname, "../README.md");
  const readMe = await fs.readFile(readMePath);

  await fs.writeFile(`${readMePath}.bak`, readMe);

  const readMeMod = readMe
    .toString()
    .replace(
      /<!-- BEGIN:usage -->(.|\n)*<!-- END:usage -->/,
      await usageTemplate()
    )
    .replace(
      /<!-- BEGIN:options -->(.|\n)*<!-- END:options -->/,
      optionsTemplate()
    );

  await fs.writeFile(readMePath, readMeMod);

  await execa("git", ["add", readMePath]);
})();
